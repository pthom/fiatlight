; This is an example configuration file for hello_imgui
; To use it:
; - Rename this file to hello_imgui.ini
; - Edit the values to match your needs
; - Place it in the current working directory of your application
; - Or any parent directory of the current working directory, to apply the settings to multiple applications.



[DpiAwareParams]
; - `dpiWindowSizeFactor`:factor by which window size should be multiplied
; - `fontRenderingScale`:
;    factor by which fonts glyphs should be scaled at rendering time
;    (typically 1 on windows, and 0.5 on macOS retina screens)
;
; By default, Hello ImGui will compute them automatically
;dpiWindowSizeFactor=2
;fontRenderingScale=0.5


; `fontOversampleH` and `fontOversampleV` : Font oversampling parameters
; Rasterize at higher quality for sub-pixel positioning. Probably unused if freeType is used.
; If not zero, these values will be used to set the oversampling factor when loading fonts.
; (i.e. they will be set in ImFontConfig::OversampleH and ImFontConfig::OversampleV)
; fontOversampleH: The difference between 2 and 3 for OversampleH is minimal.
;              You can reduce this to 1 for large glyphs save memory.
; fontOversampleV: This is not really useful as we don't use sub-pixel positions on the Y axis.
fontOversampleH=2
fontOversampleV=1



[OpenGlOptions]
; OpenGlOptions contains advanced options used at the startup of OpenGL.
; These parameters are reserved for advanced users.
; By default, Hello ImGui will select reasonable default values, and these parameters are not used.
; Use at your own risk, as they make break the multi-platform compatibility of your application!
; All these parameters are platform dependent.
; For real multiplatform examples, see
;     hello_imgui/src/hello_imgui/internal/backend_impls/opengl_setup_helper/opengl_setup_glfw.cpp
; and
;     hello_imgui/src/hello_imgui/internal/backend_impls/opengl_setup_helper/opengl_setup_sdl.cpp

; GlslVersion = 130
; MajorVersion = 3
; MinorVersion = 2
; UseCoreProfile = true
; UseForwardCompat = false

; `AntiAliasingSamples`
; If > 0, this value will be used to reduce the number of samples used for anti-aliasing.
; This is used only when running with Glfw  + OpenGL (which is the default)
; Notes:
; - by default, we query the maximum number of samples supported by the hardware and we use this value
; - if you set this value to a non-zero value, it will be used instead of the maximum value
;   (except if it is greater than the maximum value, in which case a warning will be issued)
; - if you set this value to 0, anti-aliasing will be disabled
; - setting is done via `glfwWindowHint(GLFW_SAMPLES, AntiAliasingSamples);`
; AntiAliasingSamples has a strong impact on the quality of the text rendering
;     - 0: no anti-aliasing
;     - 8: good quality
;     - 16: optimal
AntiAliasingSamples=16
