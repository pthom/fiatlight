@startuml

package fiat_core {
    class AnyDataWithGui<<DataType>> {
        ---
        a class to wrap any data with a GUI
        ---
        + _value: DataType | Unspecified | Error
        + callbacks: AnyDataGuiCallbacks[DataType]
        ----
        + save_to_json() / load_from_json()
    }

    class AnyDataGuiCallbacks<<DataType>> {
        ---
        a class that stores callbacks for AnyDataWithGui
        (most of them are optional)
        ---
        + edit : BoolFunction (custom widgets for edition)
        + present_custom: VoidFunction (for presentation)
        + etc.
    }

    class FunctionWithGui {
        Wraps a function with a GUI
        ---
        + constructor(f)
        (will fill _inputs_with_gui and _outputs_with_gui,
         attempting to guess the types)
        + invoke()
        ...
        ---
        + name: str = ""

        ----
        <b>Linked function</b>
        - _f_impl: Callable[..., Any] | None = None

        ----
        <b>Members linked to the function</b>
        - _inputs_with_gui: List[ParamWithGui[Any]]
        - _outputs_with_gui: List[OutputWithGui[Any]]

        - _last_exception_message: Optional[str] = None
        - _last_exception_traceback: Optional[str] = None
        - _dirty: bool = True

        ----
        <b>Behavioral Flags</b>
        + invoke_async: bool = False
        + invoke_manually: bool = False
        + invoke_always_dirty: bool = False

        ----
        <b>Optional callbacks</b>
        + internal_state_gui: BoolFunction | None = None
        + on_heartbeat: BoolFunction | None = None
    }


    class ParamWithGui<<DataType>> {
        name: str
        data_with_gui: AnyDataWithGui[DataType]
        default_value: DataType | Unspecified
    }

    class OutputWithGui<<DataType>> {
        data_with_gui: AnyDataWithGui[DataType]
    }


    AnyDataWithGui *-- AnyDataGuiCallbacks
    ParamWithGui *-- AnyDataWithGui
    OutputWithGui *-- AnyDataWithGui
    FunctionWithGui *-- ParamWithGui: many
    FunctionWithGui *-- OutputWithGui: 1 or many


    class FunctionNodeLink {
        + src_function_node: FunctionNode
        + src_output_idx: int
        + dst_function_node: FunctionNode
        + dst_input_name: str
    }

    class FunctionNode {
        + function_with_gui: FunctionWithGui
        + output_links: list[FunctionNodeLink]
        + input_links: list[FunctionNodeLink]
    }

    FunctionNode *-- FunctionWithGui
    FunctionNode *-- FunctionNodeLink : several


    class FunctionsGraph {
        A graph of FunctionNodes
        ---
        + functions_nodes
        + functions_nodes_links
    }

    FunctionsGraph *-- FunctionNode : many
    FunctionsGraph *-- FunctionNodeLink : many

}

note left of fiat_core
    This is the core of fiatlight.
    It is a set of classes that can be used to add a GUI
    to any data, function or graph of functions.
    It does depend on ImGui, but not on
    imgui-node-editor.
end note

@enduml
